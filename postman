postman



1. 创建一个collections（集合），其中可以创建多个请求

2. 创建一个environment（环境变量，局部的，仅在该集合中生效），也可以创建globals（全局生效的变量）

3. 变量通过“{{变量}}“ 这种方式进行调用，可以是在任何地方调用（url中，传参，header。。。）



直接写注意点吧


一：传参注意

1. post请求中的body进行传参

2. form-data和x-www-form-urlencode是不同的，有的数据使用的一个发和使用第二个发，得到的结果是不同的，具体不同在哪，搞忘了

3. 安全测试平台的传参都是通过json进行的，所以选择raw——json进行传参，直接将从请求中复制，粘贴到raw中即可

4. 具体选择什么什么功能进行传参，根据数据的值进行选择

二：数据处理

1. pre-rqe，是在请求发送之前，对数据进行处理的，用得少

2. test，也可能叫 response，是对相应结果进行处理的
      （1）可以设置变量，直接使用右侧是快捷代码
      （2）可以进行断言

3. 具体的设置代码的注意事项：
      （1）这里的代码使用的javascript
      （2）var 变量名 ，定义变量
      （3）pm 是postman的缩写，类似于是通过类调用函数的方式
      （4）var response_json = pm.response.json();   获取相应结果的json格式，可以通过变量response_json保存
      （5）response_json.(响应结果为json，这里通过. 进行一层层的查找即可); 这里的有个注意点，如果有一段数据是被包裹在[]中的，按照列表处理，比如data[0].变量名
      （6）pm.ervrionment/global.set("key", value);  向环境变量/全局变量中写入数据
      （7）console.log(var) 在控制台打印变量
      （8）pm.test("有", function () {
             pm.expect(pm.response.text()).to.include("张文涛");
           });
           属于断言了，查看相应中是否存在一段字符串，比如上面的代码，表示是否存在字符串“张文涛”，如果存在，返回“有”，这个在上面的test中定义的
           1. test（）用于api相应的函数，如果函数内的条件满足，返回true和定义的返回值，否则返回false
           2. except（） 排除掉其他响应，这里没看懂
           3. pm.response.text().to.include("张文涛")；这里先是对相应进行了text处理，得到的是相应的文本格式，再去判断其中是否存在“张文涛“ ，这一串值进行打印的话，大致是正确返回true，错误返回错误结果
           4. 其实没太理解这里面的每一段


三：自动化处理

1. postman可以运行整个集合，点击run，如果遇到报错的话（比如说是报错相应处理的那个地方的代码错误），记得对js代码进行保存，这样就不会报错了

2.完成任务，自动化获取token，完成对整个流程的书写

零： 对自动获取token总结

知识点：
1. 相应中的内容不光有body的，还有pm.response.headers(相应头中的信息)，但是取不到相应pm.cookies.get("Authorizations")，这种方式取不到相应cookie中的信息，但是从相应cookies中可以看到Authorization

方式一：直接重放得到token的请求，得到的结果不对，应该是请求发送一次之后会被标记，用来防止重放攻击的

方式二：从发送第一个请求开始，到获取到token的最后一个请求为止，将所有的请求全部重放
        难点：
            1.其中参数很多，且不清楚其中的具体意思，还都进行加密，编码的处理，无法确定具体作用，无法确定加密方式
            2.后一个请求需要用到前一个请求的response，整个变量值又糊成了一坨
            3.请求多数都是304的相应码，都是要进行跳转的
            4.两个请求中间的使用，还会发送到/p 这个地方一个请求，得到的相应是ok，应该是做校验的
            5.最大的难点，因为方法一的问题，如果是前端将当期时间戳进行了编码或加密，在通过cookie发送到后端，后端通过这个来判断是否返回token（通过这种方式防止重放攻击）的话。只能先进行逆向

总结：目前方法一，二均失败，因为这个过程实在是复杂，正常的系统应该可以完成，这个啥时候有心情可以在尝试一次。


四：postman转代码

1. 点code，复制代码出来即可




五： python自动化测试





六： 未解决问题

1. 使用pm.test可以进行判断（类似于断言），但是只能输出判断结果为对时的信息，不能自定义判断结果为false时的输出

2. 如何在字符串中添加变量，也就是test中自定义输出显示，我想将一个变量的值添加上去，如何实现















      
      
